// Copyright (c) 2016 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#include "libcef_dll/cpptoc/ems_cpptoc.h"


CEF_EXPORT int cef_ems_provider_manager_onincomingcapturedi420data(
    const char* provider_name,
    int provider_name_length,
    const char* path,
    int path_length,
    const unsigned char* y_data,
    const unsigned char* u_data,
    const unsigned char* v_data,
    unsigned int y_stride,
    unsigned int u_stride,
    unsigned int v_stride,
    int frame_width,
    int frame_height,
    float frame_rate,
    int clockwise_rotation,
    long long timestamp,
    int frame_feedback_id
    ) {
  return CefEmsProviderManager::OnIncomingCapturedI420Data(
      provider_name,
      provider_name_length,
      path,
      path_length,
      y_data,
      u_data,
      v_data,
      y_stride,
      u_stride,
      v_stride,
      frame_width,
      frame_height,
      frame_rate,
      clockwise_rotation,
      timestamp,
      frame_feedback_id
    );
}

CEF_EXPORT int cef_ems_provider_manager_onincomingcapturedRGBAdata(
  const char* provider_name,
  int provider_name_length,
  const char* path,
  int path_length,
  const unsigned char* data,
  int data_length,
  int frame_width,
  int frame_height,
  float frame_rate,
  int clockwise_rotation,
  long long timestamp,
  int pixel_format,
  int frame_feedback_id
  ) {
  return CefEmsProviderManager::OnIncomingCapturedRGBAData(
    provider_name,
    provider_name_length,
    path,
    path_length,
    data,
    data_length,
    frame_width,
    frame_height,
    frame_rate,
    clockwise_rotation,
    timestamp,
    pixel_format,
    frame_feedback_id
    );
}

CEF_EXPORT void cef_ems_provider_manager_onerror(
    const char* provider_name,
    const char* provider_name_length,
    const char* reason,
    int reason_length) {
  CefEmsProviderManager::OnError(
    provider_name,
    provider_name_length,
    reason,
    reason_length
    );
}
